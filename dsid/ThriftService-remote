#!/usr/bin/env python
#
# Autogenerated by Thrift Compiler (0.11.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py
#

import sys
import pprint
if sys.version_info[0] > 2:
    from urllib.parse import urlparse
else:
    from urlparse import urlparse
from thrift.transport import TTransport, TSocket, TSSLSocket, THttpClient
from thrift.protocol.TBinaryProtocol import TBinaryProtocol

from dsid import ThriftService
from dsid.ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
    print('')
    print('Usage: ' + sys.argv[0] + ' [-h host[:port]] [-u url] [-f[ramed]] [-s[sl]] [-novalidate] [-ca_certs certs] [-keyfile keyfile] [-certfile certfile] function [arg1 [arg2...]]')
    print('')
    print('Functions:')
    print('  void VoidRequestVoid()')
    print('  string VoidRequestBigString()')
    print('  string StringRequestSameString(string parameter)')
    print('  string StringRequestBigString(string parameter)')
    print('  i64 LongRequestLong(i64 parameter)')
    print('  i64 EightLongRequestLong(i64 parameter1, i64 parameter2, i64 parameter3, i64 parameter4, i64 parameter5, i64 parameter6, i64 parameter7, i64 parameter8)')
    print('  i64 LongListRequestLong( parameter)')
    print('  Object LongRequestObject(i64 parameter)')
    print('  i64 ObjectRequestLong(Object parameter)')
    print('  Object ObjectRequestObject(Object parameter)')
    print('  void BigIntegerList( parameter)')
    print('')
    sys.exit(0)

pp = pprint.PrettyPrinter(indent=2)
host = 'localhost'
port = 9090
uri = ''
framed = False
ssl = False
validate = True
ca_certs = None
keyfile = None
certfile = None
http = False
argi = 1

if sys.argv[argi] == '-h':
    parts = sys.argv[argi + 1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    argi += 2

if sys.argv[argi] == '-u':
    url = urlparse(sys.argv[argi + 1])
    parts = url[1].split(':')
    host = parts[0]
    if len(parts) > 1:
        port = int(parts[1])
    else:
        port = 80
    uri = url[2]
    if url[4]:
        uri += '?%s' % url[4]
    http = True
    argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
    framed = True
    argi += 1

if sys.argv[argi] == '-s' or sys.argv[argi] == '-ssl':
    ssl = True
    argi += 1

if sys.argv[argi] == '-novalidate':
    validate = False
    argi += 1

if sys.argv[argi] == '-ca_certs':
    ca_certs = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-keyfile':
    keyfile = sys.argv[argi+1]
    argi += 2

if sys.argv[argi] == '-certfile':
    certfile = sys.argv[argi+1]
    argi += 2

cmd = sys.argv[argi]
args = sys.argv[argi + 1:]

if http:
    transport = THttpClient.THttpClient(host, port, uri)
else:
    if ssl:
        socket = TSSLSocket.TSSLSocket(host, port, validate=validate, ca_certs=ca_certs, keyfile=keyfile, certfile=certfile)
    else:
        socket = TSocket.TSocket(host, port)
    if framed:
        transport = TTransport.TFramedTransport(socket)
    else:
        transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol(transport)
client = ThriftService.Client(protocol)
transport.open()

if cmd == 'VoidRequestVoid':
    if len(args) != 0:
        print('VoidRequestVoid requires 0 args')
        sys.exit(1)
    pp.pprint(client.VoidRequestVoid())

elif cmd == 'VoidRequestBigString':
    if len(args) != 0:
        print('VoidRequestBigString requires 0 args')
        sys.exit(1)
    pp.pprint(client.VoidRequestBigString())

elif cmd == 'StringRequestSameString':
    if len(args) != 1:
        print('StringRequestSameString requires 1 args')
        sys.exit(1)
    pp.pprint(client.StringRequestSameString(args[0],))

elif cmd == 'StringRequestBigString':
    if len(args) != 1:
        print('StringRequestBigString requires 1 args')
        sys.exit(1)
    pp.pprint(client.StringRequestBigString(args[0],))

elif cmd == 'LongRequestLong':
    if len(args) != 1:
        print('LongRequestLong requires 1 args')
        sys.exit(1)
    pp.pprint(client.LongRequestLong(eval(args[0]),))

elif cmd == 'EightLongRequestLong':
    if len(args) != 8:
        print('EightLongRequestLong requires 8 args')
        sys.exit(1)
    pp.pprint(client.EightLongRequestLong(eval(args[0]), eval(args[1]), eval(args[2]), eval(args[3]), eval(args[4]), eval(args[5]), eval(args[6]), eval(args[7]),))

elif cmd == 'LongListRequestLong':
    if len(args) != 1:
        print('LongListRequestLong requires 1 args')
        sys.exit(1)
    pp.pprint(client.LongListRequestLong(eval(args[0]),))

elif cmd == 'LongRequestObject':
    if len(args) != 1:
        print('LongRequestObject requires 1 args')
        sys.exit(1)
    pp.pprint(client.LongRequestObject(eval(args[0]),))

elif cmd == 'ObjectRequestLong':
    if len(args) != 1:
        print('ObjectRequestLong requires 1 args')
        sys.exit(1)
    pp.pprint(client.ObjectRequestLong(eval(args[0]),))

elif cmd == 'ObjectRequestObject':
    if len(args) != 1:
        print('ObjectRequestObject requires 1 args')
        sys.exit(1)
    pp.pprint(client.ObjectRequestObject(eval(args[0]),))

elif cmd == 'BigIntegerList':
    if len(args) != 1:
        print('BigIntegerList requires 1 args')
        sys.exit(1)
    pp.pprint(client.BigIntegerList(eval(args[0]),))

else:
    print('Unrecognized method %s' % cmd)
    sys.exit(1)

transport.close()
